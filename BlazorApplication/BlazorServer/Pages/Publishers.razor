@page "/publishers"
@inject IPublisherService publisherService
@inject IJSRuntime JSRuntime

    <div class="col-12">
        <h3><b>Enter Publisher Information</b></h3>
        <hr />
        <ServerValidations IsVisible="IsVisible" Result="Result">
            <span>Pusblisher: </span>@RecordName
        </ServerValidations>

        <EditForm Model="@publisher" OnValidSubmit="@SavePublisher">
            @*<DataAnnotationsValidator />*@
            <div class="col-12 row">
                <label class="col-2 font-weight-bold">first name :</label>
                <input @ref="publisherNameTextBox" class="form-control col-3" @bind="publisher.PublisherName" placeholder="publisher's name" />
                &nbsp;<ValidationMessage For="@(() => publisher.PublisherName)" />
            </div>
            <br />
            <div class="col-12 row">
                <label class="col-2 font-weight-bold">city :</label>
                <SelectCity @bind-CurrentCity="@publisher.City"></SelectCity>
            </div>
            <br />
            <div class="col-12 row">
                <span class="col-2"></span>
                <input type="submit" class="form-control col-1 btn btn-primary" value="Save" />
                <span>&nbsp;</span>
                <input type="submit" class="form-control col-1 btn btn-primary" value="Clear" />
            </div>

        </EditForm>

    </div>

<br />
<div class="col-6">

    <h3><b>Authors</b></h3>

    <table class="table">
        <thead>
            <tr>
                <th>PublisherId</th>
                <th>Publisher Name</th>
                <th>City</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var publisher in PublisherList)
            {
                <tr>
                    <td>@publisher.PubId</td>
                    <td>@publisher.PublisherName</td>
                    <td>@publisher.City</td>
                </tr>
            }
        </tbody>
    </table>

</div>


@code {

    public Publisher publisher { get; set; }
    public List<Publisher> PublisherList { get; set; }
    ElementReference publisherNameTextBox;
    public bool IsVisible { get; set; }
    public string RecordName { get; set; }
    public bool Result { get; set; }
   

    protected override void OnInitialized()
    {
        PublisherList = publisherService.GetPublishers();
        publisher = new Publisher();
    }

    private async Task SavePublisher()
    {

        Result = publisherService.SavePublisher(publisher);
        IsVisible = true;
        var firstName = publisher.PublisherName;
        RecordName = $"{firstName}";
        IsVisible = true;
        publisher = new Publisher();
        // await JSRuntime.InvokeVoidAsync("saveMessage",firstName,lastName);
        await JSRuntime.InvokeVoidAsync("setFocusOnElement", publisherNameTextBox);
    }
}